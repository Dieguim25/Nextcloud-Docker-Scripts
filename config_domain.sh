#!/bin/bash

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

# Fun√ß√£o para validar dom√≠nio (formato b√°sico)
validar_dominio() {
  [[ "$1" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]
}

whiptail --title "‚ö†Ô∏è Aten√ß√£o: HTTPS sem Proxy Reverso" \
--msgbox "Voc√™ est√° prestes a habilitar HTTPS.\n\n‚ö†Ô∏è Se o Nextcloud n√£o estiver atr√°s de um proxy reverso (como Nginx, Traefik, Cloudflare Tunnel ou Caddy), isso pode causar falhas graves na aplica√ß√£o, como:\n\n- Interface inacess√≠vel\n\nCertifique-se de que o proxy est√° corretamente configurado antes de prosseguir." 20 70

# Loop at√© obter dom√≠nio v√°lido e confirmado
while true; do
  DOMINIO=$(whiptail --inputbox "Digite o dom√≠nio que deseja usar (ex: cloud.seudominio.com):" 10 70 "" 3>&1 1>&2 2>&3)

  # Cancelado
  if [ $? -ne 0 ]; then
    echo -e "${RED}‚ùå Opera√ß√£o cancelada pelo usu√°rio.${NC}"
    exit 1
  fi

  # Valida√ß√£o
  if ! validar_dominio "$DOMINIO"; then
    whiptail --msgbox "‚ùå Dom√≠nio inv√°lido.\n\nUse um formato como: exemplo.com ou sub.exemplo.com" 10 70
    continue
  fi

  # Confirma√ß√£o
  whiptail --yesno "Voc√™ digitou:\n\n$DOMINIO\n\nDeseja continuar com esse dom√≠nio?" 10 70
  if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Dom√≠nio confirmado: $DOMINIO${NC}"
    break
  fi
done

# Aplica configura√ß√µes no Nextcloud
echo -e "${GREEN}üîß Aplicando configura√ß√µes no Nextcloud...${NC}"
docker exec -u www-data nextcloud-app php occ config:system:set overwrite.cli.url --value="https://$DOMINIO"
docker exec -u www-data nextcloud-app php occ config:system:set overwriteprotocol --value="https"
docker exec -u www-data nextcloud-app php occ maintenance:update:htaccess
docker restart nextcloud-app
echo -e "${GREEN}‚úÖ Configura√ß√£o conclu√≠da!${NC}"
