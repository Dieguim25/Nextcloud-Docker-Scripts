#!/bin/bash

# --- In√≠cio da Verifica√ß√£o de Root ---
if [ "$UID" -ne 0 ]; then
  echo "Erro: Este script precisa ser executado com privil√©gios de root." >&2
  echo "Por favor, execute com 'sudo'." >&2
  exit 1
fi
# --- Fim da Verifica√ß√£o de Root ---

# Cores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # Sem cor

CONFIG_PATH="/var/www/html/config/config.php"
ENV_FILE=".env"


# Se o .env n√£o estiver aqui, encerra.
if [ ! -f .env ]; then
    echo -e "${RED}Erro: Arquivo .env n√£o encontrado no diret√≥rio atual.${NC}"
    echo "Execute este script de dentro da pasta de configura√ß√£o desse container."
    exit 1
fi

# 2. Carrega as vari√°veis (como $CONTAINER_NAME) do arquivo .env
echo -e "${GREEN}Carregando configura√ß√£o...${NC}"
export $(grep -v '^#' .env | xargs)

APP_CONTAINER="${CONTAINER_NAME}-app"


# Captura o IP local
IP_LOCAL=$(hostname -I | awk '{print $1}')

# Fun√ß√£o para executar comandos OCC com verifica√ß√£o
executar_occ() {
  local descricao="$1"
  shift
  echo -e "${YELLOW}üîß $descricao...${NC}"
  if docker exec -u www-data "$APP_CONTAINER" php occ "$@"; then
    echo -e "${GREEN}‚úÖ $descricao conclu√≠do com sucesso.${NC}"
  else
    echo -e "${RED}‚ùå Falha ao executar: $descricao${NC}"
  fi
}


# Define idioma com base no fuso hor√°rio
case "$TZ" in
  America/Sao_Paulo|America/Fortaleza|America/Recife|America/Belem|America/Manaus)
    DEFAULT_LANG="pt_BR"
    ;;
  America/New_York|America/Chicago|America/Los_Angeles)
    DEFAULT_LANG="en"
    ;;
  Europe/Paris|Europe/Madrid)
    DEFAULT_LANG="fr"
    ;;
  Europe/Berlin)
    DEFAULT_LANG="de"
    ;;
  Asia/Tokyo)
    DEFAULT_LANG="ja"
    ;;
  Asia/Seoul)
    DEFAULT_LANG="ko"
    ;;
  Asia/Shanghai|Asia/Beijing)
    DEFAULT_LANG="zh_CN"
    ;;
  *)
    DEFAULT_LANG="en"
    ;;
esac

echo -e "${GREEN}‚úÖ LOCAL=$LOCAL | TZ=$TZ | IP_LOCAL=$IP_LOCAL | default_language=$DEFAULT_LANG${NC}"

# 1. Configura√ß√µes de Banco de Dados e Manuten√ß√£o
executar_occ "Corrigindo banco de dados" db:add-missing-indices
executar_occ "Executando manuten√ß√£o" maintenance:repair --include-expensive

# 3. Configura√ß√µes Regionais e de Manuten√ß√£o
executar_occ "Definindo regi√£o de telefone" config:system:set default_phone_region --value="$LOCAL"
executar_occ "Definindo fuso hor√°rio" config:system:set default_timezone --value="$TZ"
executar_occ "Definindo idioma padr√£o com base no fuso hor√°rio" config:system:set default_language --value="$DEFAULT_LANG"
executar_occ "Definindo in√≠cio da janela de manuten√ß√£o" config:system:set maintenance_window_start --value="7"

# 4. Configura√ß√µes de Seguran√ßa e Apps
executar_occ "Adicionando IP local aos dom√≠nios confi√°veis" config:system:set trusted_domains 2 --value="$IP_LOCAL"
executar_occ "Desativando app_api" app:disable app_api

# 2. Configura√ß√µes de Cache e Redis
executar_occ "habilitando bloqueio de arquivo" config:system:set filelocking.enabled --value='true'
executar_occ "Definindo memcache.locking para Redis" config:system:set memcache.locking --value '\OC\Memcache\Redis'

echo -e "${CYAN}As informa√ß√µes de credenciais podem ser encontradas na pasta ${NC}${GREEN}${CONTAINER_NAME}/.env"
sleep 3

echo -e "${YELLOW}üîÑ Reiniciando o container '$APP_CONTAINER' para aplicar as configura√ß√µes...${NC}"
docker restart "$APP_CONTAINER"
if [ $? -eq 0 ]; then
  echo -e "${GREEN}‚úÖ Container '$APP_CONTAINER' reiniciado com sucesso.${NC}"
else
  echo -e "${RED}‚ùå Falha ao reiniciar o container '$APP_CONTAINER'. Verifique os logs do Docker.${NC}"
  exit 1
fi

# Pergunta ao usu√°rio se deseja configurar o HTTPS
if (whiptail --title "Configura√ß√£o de Dom√≠nio (Opcional)" --yesno "Deseja configurar o HTTPS (Dom√≠nio) agora?\n\nAVISO:\nEsta etapa √© destinada a usu√°rios que possuem um PROXY REVERSO (como Nginx, Traefik, Caddy, Cloudflare Tunnel, etc) j√° configurado.\n\nAo continuar, o acesso direto via HTTP (IP:PORTA) deixar√° de funcionar.\n\nDeseja continuar?" 15 70 3>&1 1>&2 2>&3); then
    
    # Se o usu√°rio clicar em "Sim" (c√≥digo de sa√≠da 0)
    echo -e "${YELLOW}Iniciando configura√ß√£o de HTTPS/Dom√≠nio...${NC}"
    
    # Executa o script de configura√ß√£o de dom√≠nio
    bash config_domain.sh
    
else
    
    # Se o usu√°rio clicar em "N√£o" (c√≥digo de sa√≠da 1)
    echo -e "${GREEN}Configura√ß√£o de HTTPS/Dom√≠nio ignorada.${NC}"
    echo -e "A instala√ß√£o b√°sica foi conclu√≠da."
    # Exibe mensagem interativa via SSH com whiptail
    whiptail --title "Nextcloud est√° pronto!" \
      --msgbox "O Nextcloud est√° funcional!\n\nAcesse pelo navegador:\n\nhttp://${IP_LOCAL}:${NEXTCLOUD_PORT}\nUsu√°rio: ${NC_USER}\nSenha: ${NC_PASS}\nPara configurar um dom√≠nio e HTTPS execute o scipt config_domain.sh que est√° na pasta $CONTAINER_NAME" 20 70

    exit 0
fi
